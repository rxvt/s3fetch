[project]
name = "s3fetch"
dynamic = ["version"]
description = "Simple & fast multi-threaded S3 download tool."
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = ["aws", "s3"]
authors = [{ name = "Shane Anderson", email = "shane@reactivate.cx" }]
classifiers = [
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dependencies = ["boto3==1.40.38", "boto3-stubs[s3]==1.40.38", "click==8.3.0"]

[tool.hatch.env]
requires = ["hatch-pip-compile"]

[project.optional-dependencies]
test = ["pytest>=8.2,<8.5", "pytest-mock~=3.12.0", "moto[s3]>=5.0.28,<5.2.0"]
dev = ["pre-commit~=4.1.0", "mypy", "ruff~=0.13.1"]

[tool.hatch.envs.default]
description = """
General development environment.
"""
type = "pip-compile"
installer = "uv"
python = "3.10"
features = ["test", "dev"]

post-install-commands = ["hatch run pre-commit install"]

[tool.hatch.envs.hatch-test]
description = """Testing environment."""
type = "pip-compile"
installer = "uv"
features = ["test"]

[[tool.hatch.envs.hatch-test.matrix]]
python = ["3.13", "3.12", "3.11", "3.10"]

[project.urls]
Source = "https://github.com/rxvt/s3fetch"
Issues = "https://github.com/rxvt/s3fetch/issues"
Documentation = "https://github.com/rxvt/s3fetch#readme"

[tool.hatch.version]
path = "src/s3fetch/__init__.py"

[project.scripts]
s3fetch = 's3fetch.cli:cli'

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["s3fetch"]

[tool.coverage.report]
show_missing = true

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
files = "src/s3fetch, tests"

[[tool.mypy.overrides]]
module = ["s3fetch", "pkg_resources"]
ignore_missing_imports = true

[tool.ruff]
target-version = "py310"

[tool.ruff.lint]
select = [
  # ANN Enable flake8-annotations warnings
  # B, B9 Enable flake8-bugbear. B9 is required for Bugbearâ€™s more opinionated warnings.
  # C Enable mccabe warnings
  # D Enable flake8-docstring (pydocstyle) warnings
  # E, W Enable pycodestyle warnings
  # F Enable pyflakes warnings
  # I Enable flake8-isort warnings
  # S Enable flake8-bandit warnings
  "ANN",
  "B",
  "B9",
  "C",
  "D",
  "E",
  "W",
  "F",
  "I",
  "S",
]
ignore = [
  "ANN204", # Ignore return type annotation for special methods
]

[tool.ruff.lint.pydocstyle]
convention = "google"

# Ignore `E402` (import violations) in all `__init__.py` files, and in `path/to/file.py`.
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["D104"]
"tests/*" = [
  "ANN201", # Ignore missing return types for test functions
  "ANN001", # Ignore missing type annotations for test functions
  "D103",   # Ignore missing docstrings in test functions as the function name should be descriptive.
  "D100",
  "S101",   # Ignore use of 'assert'
]

[tool.pyright]
reportUnusedCallResult = false
typeCheckingMode = "basic"
